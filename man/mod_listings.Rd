% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mod_listings.R
\name{mod_listings}
\alias{mod_listings}
\title{Data listings module for DaVinci's module manager}
\usage{
mod_listings(
  module_id,
  dataset_names,
  default_vars = NULL,
  pagination = NULL,
  intended_use_label =
    "Use only for internal review and monitoring during the conduct of clinical trials.",
  subjid_var = "USUBJID",
  receiver_id = NULL,
  review = NULL
)
}
\arguments{
\item{module_id}{\verb{[character(1)]} Unique module_id identifier. It can only contain alphanumeric characters and underscores.}

\item{dataset_names}{\verb{[character(1+)]}

Name(s) of the dataset(s) that will be displayed.}

\item{default_vars}{\verb{[list(characters(1+)) | NULL]}

A list of character vectors which contain the variable names to be displayed as default per
dataset. Named according to the \code{dataset_names}. If \code{NULL}, the first six variables are displayed for each
dataset.}

\item{pagination}{\verb{[logical(1) | NULL]} Either a boolean indicating if pagination should be activated, or
NULL for which pagination will be activated for large datasets (nrows > 1000) automatically.}

\item{intended_use_label}{\verb{[character(1) | NULL]} Either a string indicating the intended use for export, or
NULL. The provided label will be displayed prior to the download and will also be included in the exported file.}

\item{subjid_var}{\verb{[character(1)]}

Column corresponding to subject ID. Default value is 'USUBJID'}

\item{receiver_id}{\verb{[character(1) | NULL]}

Character string defining the ID of the module to which to send a subject ID. The
module must exist in the module list. The default is NULL which disables communication.}

\item{review}{\verb{[list()]}

Configuration of the experimental data review feature.
Only one instance of the listings module can use this feature on any given app.
For more details, please refer to \code{vignette("data_review")}.}
}
\description{
This module will present the dataset as listing using the DT package.
}
\examples{
\dontshow{if (interactive()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
library(dv.listings)

# 1. Create a data list with example data
data_list <- list(
  adsl  = pharmaverseadam::adsl,
  adae  = pharmaverseadam::adae,
  adtte = pharmaverseadam::adtte_onco
)

# 2. Preprocessing
# Convert data to appropriate types
data_list$adsl <- convert_data(data_list$adsl)
data_list$adae <- convert_data(data_list$adae)
data_list$adtte <- convert_data(data_list$adtte)

# Assign meaningful labels to data domain names
attributes(data_list$adsl)$label <- "Subject Level"
attributes(data_list$adae)$label <- "Adverse Events"
attributes(data_list$adtte)$label <- "Time-to-Event"

# Specify default variables
default_vars <- list(
  adsl = c("STUDYID", "USUBJID", "SITEID", "ARM"),
  adae = c("STUDYID", "ASTDY", "AENDT", "AESER")
)

# 3. Module list
module_list <- list(
  "Exemplary listings" = mod_listings(
    module_id = "mod1",
    dataset_names = c("adsl", "adae", "adtte"),
    default_vars = default_vars
  )
)

# 4. Launch the app
dv.manager::run_app(
  data = list("MyData" = data_list),
  module_list = module_list,
  filter_data = "adsl"
)
\dontshow{\}) # examplesIf}
}
\seealso{
Other data_listings: 
\code{\link{listings_UI}()}
}
\concept{data_listings}
