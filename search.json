[{"path":"/articles/Communication_jumping_feature.html","id":"activate-communication-within-listings-module","dir":"Articles","previous_headings":"","what":"Activate communication within listings module","title":"Communication with DaVinci modules","text":"default receiver_id parameter mod_listings() call module list definition set NULL means communication functionality disabled. enable switching another DaVinci module, set receiver_id module ID counterpart module.","code":""},{"path":"/articles/Communication_jumping_feature.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Communication with DaVinci modules","text":"Example code module list definition turn communication feature listings Patient Profile module:","code":"library(dv.listings)  # 1. Create a data list with example data data_list <- list(   adsl  = pharmaverseadam::adsl,   adae  = pharmaverseadam::adae,   adtte = pharmaverseadam::adtte_onco )  # Convert data to appropriate types data_list$adsl <- convert_data(data_list$adsl) data_list$adae <- convert_data(data_list$adae) data_list$adtte <- convert_data(data_list$adtte)  # Assign meaningful labels to data domain names attributes(data_list$adsl)$label <- \"Subject Level\" attributes(data_list$adae)$label <- \"Adverse Events\" attributes(data_list$adtte)$label <- \"Time-to-Event\"  # Specify default variables default_vars <- list(   adsl = c(\"STUDYID\", \"USUBJID\", \"SITEID\", \"ARM\"),   adae = c(\"STUDYID\", \"ASTDY\", \"AENDT\", \"AESER\") )  # 2. Create list of modules - must include listings module and dv.papo module. module_list <- list(   \"Exemplary listings\" = dv.listings::mod_listings(     module_id = \"listings1\",     dataset_names = c(\"adsl\", \"adae\", \"adtte\"),     default_vars = default_vars,     receiver_id = \"papo1\"   ),   \"Patient Profile\" = dv.papo::mod_patient_profile(     module_id = \"papo1\",     subject_level_dataset_name = \"adsl\",     subjid_var = \"USUBJID\",     summary = list(       vars = c(\"SUBJID\", \"SITEID\", \"ARM\", \"TRTSDT\", \"TRTEDT\", \"AGE\", \"RACE\", \"SEX\"),       column_count = 3L     ),     listings = list(       \"Adverse Events\" = list(         dataset = \"adae\",         default_vars = c(\"ASTDT\", \"ASTDY\", \"AENDT\", \"AENDY\", \"AEDECOD\", \"AESEV\")       )     ),     sender_ids = \"listings1\"   ) )  dv.manager::run_app(   data = list(\"MyData\" = data_list),   module_list = module_list,   filter_data = \"adsl\" )"},{"path":"/articles/data_review.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Data review (experimental feature)","text":"dv.listings module provides optional user interface assist data review processes. enables team reviewers annotate row given listing tag chosen preconfigured list options. addition, keeps track changes data underlying listings warn possibly outdated reviews. Please note feature still experimental may subject change. Also note , moment, one instance dv.listings module can provide feature given DaVinci app. ’s detailed description review function: Users can self-select reviewer role , capacity, annotate row given dataset value chosen available dropdown menu. Several users can interact strictly non-overlapping roles application, annotating individual rows possibly overlapping datasets. decisions, including conflicting ones (.e., differing across roles), stored. last decision one visible users default. Rows identified subset dataset’s columns (call identifier columns). subset dataset-specific. two rows can share set identifier values. subset columns (call tracked overlap identifier columns) considered necessary sufficient review purposes. Updates provided datasets expected course study. Changes contents tracked columns previously reviewed dataset row highlighted user interface require re-confirmation. datasets share decision dropdown choices.","code":""},{"path":[]},{"path":"/articles/data_review.html","id":"structure","dir":"Articles","previous_headings":"User interface","what":"Structure","title":"Data review (experimental feature)","text":"properly configured, interface module expands show three extra components, pictured : location store information derived review process. reviewer role actions registered. “latest review” column shows recent review provided member team allows change . “status” column displays possible review disagreements among team allows investigate resolve . Select new review decision. Rows individually selected left-per-row checkboxes (“Apply selected” button). rows output, including subsequent pages (“Apply full table”). selection affected column filters.  three review columns behave similarly regular listing columns, allow filtering sorting. Thus, make easy find reviews pending list reviews conflict across reviewers.","code":""},{"path":"/articles/data_review.html","id":"highlighting-of-potentially-outdated-reviews","dir":"Articles","previous_headings":"User interface","what":"Highlighting of potentially outdated reviews","title":"Data review (experimental feature)","text":"study progresses, possible data already reviewed change. order bring changes attention reviewers, dv.listings automatically highlights altered data cells (columns specified tracked) may make previous reviews outdated. case four altered cells given row, whole row highlighted outdated. picture , can see “Severity” first adverse event changed.  user can isolate reviewed, later altered, rows selecting “Latest Outdated” “Status” column. rows cleared orange highlighting reviewer confirms still correct re-reviews otherwise.","code":""},{"path":"/articles/data_review.html","id":"module-configuration","dir":"Articles","previous_headings":"","what":"Module configuration","title":"Data review (experimental feature)","text":"review feature configured optional review parameter mod_listings. example configuration two hypothetical demographics (dm) adverse events (ae) SDTM domains: review parameter divided four subfields: datasets: named list domain configurations. names refer datasets associated listings, .e. provided dataset_names parameter. elements list list two elements: id_vars: [character(n)] Immutable variables uniquely identify record given domain. example, case demographics domain, Unique SUBJect IDentifier enough. case adverse events domain, USUBJID Adverse Event SEQuence number necessary. tracked_vars: [character(3+)] Variables track across dataset updates. contents one columns changes already reviewed row, review marked potentially outdated. vector list least three variables. choices: [character(n)] Review choices available assign listing row. roles: [character(n)] Names reviewer roles. names can include following characters: alphanumerical, space, dot, underscore dash. store_path: [character(1)] Optional. specified, files associated review process stored path server. left unspecified, files stored folder client’s computer. users app opportunity choose path launch .","code":"mod_listings(   ..., # all other parameters omitted for brevity   dataset_names = c(\"ae\", \"dm\"),   review = list(     datasets = list(       dm = list(         id_vars = \"USUBJID\",         tracked_vars = c(\"DMDTC\", \"RFSTDTC\", \"RFENDTC\")       ),       ae = list(         id_vars = c(\"USUBJID\", \"AESEQ\"),          tracked_vars = c(           \"AETERM\", \"AEDECOD\", \"AESEV\", \"AESTDTC\",            \"AEENDTC\", \"AEOUT\", \"AEACN\", \"AEREL\"         )       )     ),     choices = c(\"Pending\", \"Action required\", \"Reviewed\"),     roles = c(\"TSTAT\", \"SP\", \"Safety\", \"CTL\"),     store_path = NULL   ) )"},{"path":"/articles/data_review.html","id":"storage-of-review-related-files","dir":"Articles","previous_headings":"","what":"Storage of review-related files","title":"Data review (experimental feature)","text":"review datasets evolve course clinical trial requires form storage : Shared among members team conducting review. Stable throughout duration trial. natural location storage folder server hosts review application. However, Shiny execution environments lack permanent server storage. cases, module offers possibility storing review information client side store_path field review parameter left unspecified.","code":""},{"path":"/articles/data_review.html","id":"client-side-storage","dir":"Articles","previous_headings":"Storage of review-related files","what":"Client side storage","title":"Data review (experimental feature)","text":"Recent versions Google Chrome browsers derived (Edge, etc.) offer experimental support javascript code read write client file system native apps . module takes advantage File System Access API compensate potential lack server storage. practical terms, relying feature means every time users access review app, browser prompt ask permission read write folder allocated specifically review purposes. case reviews conducted team reviewers, team whole decide beforehand networked folder (shared NFS, Google Drive, Microsoft OneDrive, Dropbox, …) use order collaborate duration study. recommend users participating multiple studies set independent folder .","code":""},{"path":"/articles/data_review.html","id":"data-stability-requirements","dir":"Articles","previous_headings":"","what":"Data Stability Requirements","title":"Data review (experimental feature)","text":"module access latest version given dataset. order inform users modified newly added records, relies stored summary hashes previously seen data. Thus, ’s necessary aspects representation data kept constant life study. : rows provided dataset identified uniquely combination id_vars configured beginning study. Identifying variables (defined id_vars) tracked variables (defined tracked_vars) remain duration study. Identifying tracked variables retain types (factor, numeric, …) available revision dataset.","code":""},{"path":"/articles/data_review.html","id":"implementation-details","dir":"Articles","previous_headings":"","what":"Implementation details","title":"Data review (experimental feature)","text":"final section documents design principles structure review-related files dv.listings creates. can safely skipped regular use review feature. However may prove useful following scenarios: future dv.listings developers/maintainers, know reasoning behind unusual design decisions. app creators users, know backup migrate review data. app users, know read explore review data outside limitations module. file formats used review portion dv.listings still work progress, goal document thoroughly enough external tools parse even produce . allow third-parties address specific user needs without cluttering dv.listings module infrequently used (still useful) functionality. nature review feature requires concurrent multi-user (multi-session, multi-process) write access shared resource, Posit deems incompatible pins (https://docs.posit.co/connect/user/pins/, see reddish box). first DaVinci module stores permanently substantial amount study decisions taken extended period time. Loss data context acceptable. guarantee data integrity, propose use simple append-data structures. stored plain files opened “append” mode. ’s easy demonstrate can’t become source catastrophic loss data past review sessions. granularity pins API (allows load store complete files) incompatible design. Data appending improves performance, new changes need serialized. ’s also useful version tracking, editing operations can replayed order happened. Backing review data can accomplished copying contents container folder independent file system. Since review operations appended, delta-transmission tool rsync natural fit. Lastly, using plain file storage allows easy local testing universal use review feature (running application locally, Connect, Openshift, …). take hypothetical “xyz” domain, dv.listings store following files review purposes (expand see layout contents): 1 file magic code (“LISTBASE”) 1 format version number (0) 1 generation marker (0) 1 timestamp creation date+time (UTC) 1 complete hash “xyz” data.frame 1 domain string (“xyz”) n id_vars variable names n id_vars variable types (see “Variable type encoding” ) m tracked_vars variable names m tracked_vars variable types (see “Variable type encoding” ) 1 row count p (1 per “xyz” row) hash_id(xyz[id_vars]) p (1 per “xyz” row, 2*m bytes long) hash_tracked(xyz[tracked_vars]) 1 file magic code (“LISTDELT”) 1 format version number (0) 1 generation marker (1). Wraps around 0 255 (e.g. xyz_256.delta) 1 timestamp delta (seconds elapsed since “base” timestamp) 1 complete hash new “xyz” data.frame 1 domain string (“xyz”) 1 count new rows n (1 per new “xyz” row) hash_id(xyz[id_vars]) n (1 per new “xyz” row, 2*m bytes long) hash_tracked(xyz[tracked_vars]) 1 count modified rows p (1 per modified “xyz” row) row index p (1 per modified “xyz” row, 2*m bytes long) hash_tracked(xyz[tracked_vars]) 1 file magic code (“LISTREVI”) 1 format version number (0) 1 role string 1 domain string (“xyz”) n reviews: row index + review_index + delta timestamp 1 file magic code (“LISTCODE”) 1 format version number (0) n review texts (Row indices refer indices stored base+delta matrix, append-. canonical indices good identifiers). dominant factor governing size files length hash, 16 bytes case hash_id 2*m bytes (m number tracked columns) case hash_tracked, discuss “Hashing” session . Row indices delta timestamps can encoded 4 bytes. Review indices take 1 byte . Estimating upper bound 1 million rows per dataset, .base file tracking 8 variables take around 32 MiB. comprehensive .review file dataset take around 9 MiB. file structures designed start short heterogeneous header reiterates information can gleaned file name. rest records homogeneous known size. allows load memory without need expensive parsing. files won’t benefit much compression since main content (hashes) construction statistically indistinguishable noise. two “variable type” .base fields encoded single bytes take following values: Date: 1 POSIXct: 2 POSIXlt: 3 Logical: 10 Factor: 11 Integer: 13 Numeric: 14 Complex: 15 Character: 16 Raw: 24 values taken base R SEXPTYPE enum definition (see src/include/Rinternals.h recent R source distribution). values assigned time types arbitrary, S3 objects thus lack dedicated SEXPTYPE values. store hashes values id_vars tracked_vars dataset columns. hashes serve content IDs.","code":""},{"path":"/articles/data_review.html","id":"choice-of-hash-function","dir":"Articles","previous_headings":"Implementation details","what":"Choice of hash function","title":"Data review (experimental feature)","text":"popular choice non-cryptographic hashing xxh family function (https://github.com/Cyan4973/xxHash/tree/dev?tab=readme-ov-file#xxhash---extremely-fast-hash-algorithm) balance speed perceived hash quality. Three independent R packages implement : rlang: Provides control serialization, hashes potentially stable across R versions. digest: Maintained Dirk Eddelbuettel, known stickler backwards compatibility. Provides serialization options. xxhashlite: Substantially faster two implementations small input sizes (scenario). Provides serialization options. makes sense use fastest implementation available, respects time users requires less energy. xxhashlite clear winner, migration digest (“vendoring” xxhashlite inside package) always possible lesser-known package somehow retired CRAN.","code":""},{"path":"/articles/data_review.html","id":"hashing-of-id-variables-hash_id","dir":"Articles","previous_headings":"Implementation details","what":"Hashing of ID variables (hash_id())","title":"Data review (experimental feature)","text":"perfect hash function, expect collision 2^(n/2) entries hashed, n output length bits chosen hash. hash produces 64 bits strong enough 2^32 large quantity hashes, still bound collide review feature used long enough. opt instead 128 bits, makes possibility collision extremely unlikely. expect upper bound one million rows per dataset, 13 orders magnitude lower mean amount entries estimated necessary get collision. chosen hash won’t perfect, ample safety margin. also assume data created adversarial means geared towards making hash collisions likely.","code":""},{"path":"/articles/data_review.html","id":"hashing-of-tracked-variables-hash_tracked","dir":"Articles","previous_headings":"Implementation details","what":"Hashing of tracked variables (hash_tracked())","title":"Data review (experimental feature)","text":"apply reasoning behind choice hash_id() function hashing variable parts row. instead propose complex hashing scheme provide partial information variables row altered hash changes. hash value 2*m bytes long, m number variables tracked given dataset. bytes independent hash three tracked variables dataset row. variable, turn, contributes three 2*m byte-sized hashes. mixing variables makes harder external adversarial observer .base .delta files brute-force original values dataset looking collisions computed hash values. compute variables contribute hash byte pair, use following scheme: Byte pair n: Variables (n+0)%n, (n+2)%n (n+3)%n % indicates remainder integer division. , input dataset seven tracked variables (zero six), mean: Byte pair 0: Variables 0, 2 3 Byte pair 1: Variables 1, 3 4 Byte pair 2: Variables 2, 4 5 Byte pair 3: Variables 3, 5 6 Byte pair 4: Variables 4, 6 0 Byte pair 5: Variables 5, 0 1 Byte pair 6: Variables 6, 1 2 scheme creates unique mixtures variables. Take, instance, variable 0. combined variables 2 3 zeroth byte pair, variables 4 6 fourth byte pair 1 5 fifth byte pair. byte pairs computed : Taking three values hash. Serializing text concatenating using non-ASCII byte separator 1D (also known “group separator”). Computing xxh32 hash returning two significant bytes. Informal testing (refer tests/testthat/tests-hash_tracked.R details) hashing scheme shows following properties: ’s capable identifying four modified variables per row (, ’s preferable give notify whole row modified). low false negative rate (variable modified without notified ). low false positive rate (variable retains value notified modified). happens actual changes row. False positives critical, ask reviewers consider larger set variables re-reviewing row altered. False negatives critical, since allow changes go unreported reviewers. choice hash favors false positives false negatives. composite hash function compromise found heuristic exploration. come better option, can version “format version number” present .base .delta files. means neither app creator app users concern underlying hash_tracked representation.","code":""},{"path":"/articles/qc.html","id":"dv-listings-4-3-0","dir":"Articles","previous_headings":"","what":"✅ dv.listings 4.3.0","title":"Quality Control","text":"Date: 2025-Oct-31 15:17:22 following document generates report R packages, satisfy criteria “Released” status Non-GxP project. QC report contains following information: Specifications (specs): can attached every test user adds. Traceability matrix: Contains test cases passed, failed, skipped expectations. Uncovered undeclared specs Session Info System Configuration Please advised QC report generated module imply validation according GxP criteria. QC report satisfies internally developed quality checks non-GxP criteria. clinical reporting purposes, essential note outputs generated using module must checked verified within validated system adheres appropriate GxP guidelines.","code":""},{"path":"/articles/qc.html","id":"traceability-matrix","dir":"Articles","previous_headings":"","what":"Traceability matrix","title":"Quality Control","text":"traceability matrix tests point specification included. Test cases can contain several expectations test considered: passed expectations test pass. failed least one expectation test fails. skipped least one expectation test skipped. test can failed skipped.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"/articles/qc.html","id":"undeclared-specifications","dir":"Articles","previous_headings":"Traceability matrix","what":"Undeclared specifications","title":"Quality Control","text":"always empty, non existant specs controlled test execution.","code":""},{"path":"/articles/qc.html","id":"session-info-and-system-configuration","dir":"Articles","previous_headings":"","what":"Session Info and System Configuration","title":"Quality Control","text":"","code":"#> ─ Session info ─────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.4.3 (2025-02-28) #>  os       Ubuntu 22.04.5 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en #>  collate  en_US.UTF-8 #>  ctype    en_US.UTF-8 #>  tz       Etc/UTC #>  date     2025-10-31 #>  pandoc   3.8 @ /usr/bin/ (via rmarkdown) #>  quarto   1.7.31 @ /usr/local/bin/quarto #>  #> ─ Packages ─────────────────────────────────────────────────────────────────── #>  package     * version date (UTC) lib source #>  bslib         0.9.0   2025-01-30 [2] RSPM #>  cachem        1.1.0   2024-05-16 [2] RSPM #>  cli           3.6.5   2025-04-23 [2] RSPM #>  crosstalk     1.2.1   2023-11-23 [2] RSPM #>  desc          1.4.3   2023-12-10 [2] RSPM #>  devtools      2.4.5   2022-10-11 [2] RSPM #>  digest        0.6.37  2024-08-19 [2] RSPM #>  DT            0.33    2024-04-04 [2] RSPM #>  ellipsis      0.3.2   2021-04-29 [2] RSPM #>  evaluate      1.0.3   2025-01-10 [2] RSPM #>  fastmap       1.2.0   2024-05-15 [2] RSPM #>  fs            1.6.6   2025-04-12 [2] RSPM #>  glue          1.8.0   2024-09-30 [2] RSPM #>  htmltools     0.5.8.1 2024-04-04 [2] RSPM #>  htmlwidgets   1.6.4   2023-12-06 [2] RSPM #>  httpuv        1.6.16  2025-04-16 [2] RSPM #>  jquerylib     0.1.4   2021-04-26 [2] RSPM #>  jsonlite      2.0.0   2025-03-27 [2] RSPM #>  knitr         1.50    2025-03-16 [2] RSPM #>  later         1.4.2   2025-04-08 [2] RSPM #>  lifecycle     1.0.4   2023-11-07 [2] RSPM #>  magrittr      2.0.3   2022-03-30 [2] RSPM #>  memoise       2.0.1   2021-11-26 [2] RSPM #>  mime          0.13    2025-03-17 [2] RSPM #>  miniUI        0.1.2   2025-04-17 [2] RSPM #>  pkgbuild      1.4.7   2025-03-24 [2] RSPM #>  pkgdown       2.1.2   2025-04-28 [2] RSPM #>  pkgload       1.4.0   2024-06-28 [2] RSPM #>  profvis       0.4.0   2024-09-20 [2] RSPM #>  promises      1.3.2   2024-11-28 [2] RSPM #>  purrr         1.0.4   2025-02-05 [2] RSPM #>  R6            2.6.1   2025-02-15 [2] RSPM #>  ragg          1.4.0   2025-04-10 [2] RSPM #>  Rcpp          1.0.14  2025-01-12 [2] RSPM #>  remotes       2.5.0   2024-03-17 [2] RSPM #>  rlang         1.1.6   2025-04-11 [2] RSPM #>  rmarkdown     2.29    2024-11-04 [2] RSPM #>  sass          0.4.10  2025-04-11 [2] RSPM #>  sessioninfo   1.2.3   2025-02-05 [2] RSPM #>  shiny         1.10.0  2024-12-14 [2] RSPM #>  systemfonts   1.2.3   2025-04-30 [2] RSPM #>  textshaping   1.0.1   2025-05-01 [2] RSPM #>  urlchecker    1.0.1   2021-11-30 [2] RSPM #>  usethis       3.1.0   2024-11-26 [2] RSPM #>  vctrs         0.6.5   2023-12-01 [2] RSPM #>  xfun          0.52    2025-04-02 [2] RSPM #>  xtable        1.8-4   2019-04-21 [2] RSPM #>  yaml          2.3.10  2024-07-26 [2] RSPM #>  #>  [1] /tmp/RtmpnKs39f/temp_libpath20d6a1ce811 #>  [2] /usr/local/lib/R/site-library #>  [3] /usr/local/lib/R/library #>  #> ──────────────────────────────────────────────────────────────────────────────"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Boehringer-Ingelheim Pharma GmbH & Co.KG. Copyright holder, funder. Isabel Glauss. Author, maintainer. Korbinian Matthias. Author. Luis Morís Fernández. Author. Jessica Knizia. Contributor. Gurjinder Mohan. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Glauss , Matthias K, Morís Fernández L (2025). dv.listings: Data listings module. R package version 4.3.0.","code":"@Manual{,   title = {dv.listings: Data listings module},   author = {Isabel Glauss and Korbinian Matthias and Luis {Morís Fernández}},   year = {2025},   note = {R package version 4.3.0}, }"},{"path":"/index.html","id":"dvlistings","dir":"","previous_headings":"","what":"dv.listings","title":"dv.listings","text":"listings module DaVinci’s {dv.listings} package displays arbitrary datasets listings. Users can select dataset shown, specify columns dataset displayed well order. displayed columns can sorted filtered. Moreover, listing can filtered show entries containing keyword specified user. module limited usage one data source, notably, can handle data ADaM SDTM.  module prepared used combination DaVinci’s {dv.manager} package supports bookmarking functionality.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"dv.listings","text":"Feel free copy following code chunk install latest version {dv.listings}. Since listings module intended used within application created means DaVinci’s module manager, make sure installed {dv.manager} version number equally higher 2.1.0.","code":"if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"Boehringer-Ingelheim/dv.listings\")"},{"path":"/index.html","id":"data-requirements","dir":"","previous_headings":"","what":"Data requirements","title":"dv.listings","text":"stated , listings module can display data various data sources. However, column filters function correctly, columns need converted appropriate data types, e.g., categorical data stored factor, numbers numeric, etc. simplify data conversion, package provides convenient function called convert_data(). example demonstrating usage function can found section . Note dv.listings drops row names. case dataset equipped informative row names required displayed, include manually scope preprocessing. example:","code":"my_data <- datasets::mtcars my_data[[\"index\"]] <- rownames(my_data) attributes(my_data$index)$label <- \"Former row names\""},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"dv.listings","text":"define app based {dv.listings} {dv.manager}, need load data, make sure provided data comply requirements listings module, define list modules contains listings module, launch app via run_app() {dv.manager}. following example contains listed steps. data protection purposes, example uses dummy data {pharmaverseadam}.","code":"library(dv.listings)  # 1. Create a data list with example data data_list <- list(   adsl  = pharmaverseadam::adsl,   adae  = pharmaverseadam::adae,   adtte = pharmaverseadam::adtte_onco )  # 2. Preprocessing # Convert data to appropriate types data_list$adsl <- convert_data(data_list$adsl) data_list$adae <- convert_data(data_list$adae) data_list$adtte <- convert_data(data_list$adtte)  # Assign meaningful labels to data domain names attributes(data_list$adsl)$label <- \"Subject Level\" attributes(data_list$adae)$label <- \"Adverse Events\" attributes(data_list$adtte)$label <- \"Time-to-Event\"  # Specify default variables default_vars <- list(   adsl = c(\"STUDYID\", \"USUBJID\", \"SITEID\", \"ARM\"),   adae = c(\"STUDYID\", \"ASTDY\", \"AENDT\", \"AESER\") )  # 3. Module list module_list <- list(   \"Exemplary Table\" = mod_listings(     module_id = \"mod1\",     dataset_names = c(\"adsl\", \"adae\", \"adtte\"),     default_vars = default_vars   ) )  # 4. Launch the app dv.manager::run_app(   data = list(\"MyData\" = data_list),   module_list = module_list,   filter_data = \"adsl\" )"},{"path":"/index.html","id":"export-functionality","dir":"","previous_headings":"","what":"Export functionality","title":"dv.listings","text":"listings module allows users export listings. Users option either download currently displayed listing available listings. download currently active listing, saved exactly appears screen, either .xlsx .pdf format. case filters applied, downloaded file reflect include filtered data. users wish download listings, module allows saving .xlsx format exclusively. process disregards local filters, listing saved separate worksheet within file. Please aware PDF download feature implemented using RMarkdown file rendered PDF LaTeX. , important note LaTeX installation, along necessary packages, required use feature.","code":""},{"path":"/index.html","id":"jumping-feature","dir":"","previous_headings":"","what":"Jumping Feature","title":"dv.listings","text":"feature enabled, users can click subject identifier column drill details related specific subject. see working example, please refer “Communication_jumping_feature” vignette.","code":""},{"path":"/reference/calculate_col_width.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function to prepare a data frame and determine the width of its columns for pdf export — calculate_col_width","title":"Internal helper function to prepare a data frame and determine the width of its columns for pdf export — calculate_col_width","text":"Shortens splits column labels necessary, adapts entries reference column vector easier handling, determines width reference columns data frame columns upcoming pdf generation. Widths given amount characters.","code":""},{"path":"/reference/calculate_col_width.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function to prepare a data frame and determine the width of its columns for pdf export — calculate_col_width","text":"","code":"calculate_col_width(df, ref)"},{"path":"/reference/calculate_col_width.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function to prepare a data frame and determine the width of its columns for pdf export — calculate_col_width","text":"df [data.frame] single data frame named columns. ref [character(0+)] character vector whose entries specify selection columns df. format entries follows: name [label].","code":""},{"path":"/reference/calculate_col_width.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper function to prepare a data frame and determine the width of its columns for pdf export — calculate_col_width","text":"transformed reference column vector whose entries include solely column names (ref), splitted labels vectors stored within list (label_vecs), maximal column widths data frame columns (width_max), maximal column widths reference columns (ref_width), maximal column widths non-reference columns dataframe (width), table width exclusively row names (table_width), logical indicating whether reference columns specification valid (check_ref_cols).","code":""},{"path":"/reference/cash-.pack_of_constants.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract constant from pack — $.pack_of_constants","title":"Extract constant from pack — $.pack_of_constants","text":"Extract constant pack","code":""},{"path":"/reference/cash-.pack_of_constants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract constant from pack — $.pack_of_constants","text":"","code":"# S3 method for class 'pack_of_constants' pack$name"},{"path":"/reference/cash-.pack_of_constants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract constant from pack — $.pack_of_constants","text":"pack pack_of_constants name target constant function differs base list extraction method avoids partial matching keys throws error looked-constant contained within pack.","code":""},{"path":"/reference/check_review_parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Early error feedback function for the optional review parameter — check_review_parameter","title":"Early error feedback function for the optional review parameter — check_review_parameter","text":"Early error feedback function optional review parameter","code":""},{"path":"/reference/check_review_parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Early error feedback function for the optional review parameter — check_review_parameter","text":"","code":"check_review_parameter(datasets, dataset_names, review, err)"},{"path":"/reference/check_review_parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Early error feedback function for the optional review parameter — check_review_parameter","text":"datasets [list(data.frame)] Available datasets review. dataset_names [character(n)] Names datasets provided previous parameter. review [list()] Configuration experimental data review feature. Please refer vignette(\"data_review\"). error [environment] environment least one element named \"messages\". character vector. Diagnostic messages related configuration review parameter placed .","code":""},{"path":"/reference/convert_data.html","id":null,"dir":"Reference","previous_headings":"","what":"This function is a wrapper for utils::type.convert() to keep column labels — convert_data","title":"This function is a wrapper for utils::type.convert() to keep column labels — convert_data","text":"Converts data types data.frame columns logical, integer, numeric, complex, character factor appropriate. Re-assigns column labels converting data type.","code":""},{"path":"/reference/convert_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function is a wrapper for utils::type.convert() to keep column labels — convert_data","text":"","code":"convert_data(dataset)"},{"path":"/reference/convert_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function is a wrapper for utils::type.convert() to keep column labels — convert_data","text":"dataset [data.frame] Single data.frame convert column data types","code":""},{"path":"/reference/convert_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function is a wrapper for utils::type.convert() to keep column labels — convert_data","text":"data.frame converted data types data.frame columns","code":""},{"path":"/reference/excel_export.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function which performs the download as .xlsx file. — excel_export","title":"Internal helper function which performs the download as .xlsx file. — excel_export","text":"export datasets listed within data_to_download separate Excel worksheet. Column names datasets extended labels.","code":""},{"path":"/reference/excel_export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function which performs the download as .xlsx file. — excel_export","text":"","code":"excel_export(data_to_download, file, intended_use_label)"},{"path":"/reference/excel_export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function which performs the download as .xlsx file. — excel_export","text":"data_to_download [list(data.frame)] list data frames downloaded. file [character(1)] string specifying filename ending \".xlsx\".","code":""},{"path":"/reference/export_modal_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function that specifies the content of the download modal dialogue. — export_modal_content","title":"Internal helper function that specifies the content of the download modal dialogue. — export_modal_content","text":"Internal helper function specifies content download modal dialogue.","code":""},{"path":"/reference/export_modal_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function that specifies the content of the download modal dialogue. — export_modal_content","text":"","code":"export_modal_content(ns, file_name, cond, colnames, activate_checkbox = FALSE)"},{"path":"/reference/export_modal_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function that specifies the content of the download modal dialogue. — export_modal_content","text":"ns function expects ID returns namespaced ID, usually generated shiny::NS(). file_name [character(1)] string containing initial file name. cond [character(1)] string containing JavaScript expression evaluated determine whether conditionalPanel displayed. colnames [character(0+)] character vector containing reference column choices. activate_checkbox [logical(1)] boolean indicating whether checkbox activated . Default FALSE.","code":""},{"path":"/reference/export_modal_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper function that specifies the content of the download modal dialogue. — export_modal_content","text":"shiny tagList.","code":""},{"path":"/reference/fill_default_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function to set missing default columns — fill_default_vars","title":"Internal helper function to set missing default columns — fill_default_vars","text":"Avoid empty displays case default columns specified showing first six columns dataset. dataset contain less six columns, whole dataset displayed.","code":""},{"path":"/reference/fill_default_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function to set missing default columns — fill_default_vars","text":"","code":"fill_default_vars(default_vars, dataset)"},{"path":"/reference/fill_default_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function to set missing default columns — fill_default_vars","text":"default_vars [list(character(0+))] Named list character vectors contain names columns displayed module launch per dataset. List entries named according dataset names can NULL datasets. dataset [list(data.frame)] list data.framish dataset(s) shown listings.","code":""},{"path":"/reference/fill_default_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper function to set missing default columns — fill_default_vars","text":"Named list character vectors Contain names columns displayed module launch every dataset. List entries named according dataset names.","code":""},{"path":"/reference/generate_choices.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function to generate either column or dataset choices for the corresponding UI dropdown menues — generate_choices","title":"Internal helper function to generate either column or dataset choices for the corresponding UI dropdown menues — generate_choices","text":"Internal helper function generate either column dataset choices corresponding UI dropdown menues","code":""},{"path":"/reference/generate_choices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function to generate either column or dataset choices for the corresponding UI dropdown menues — generate_choices","text":"","code":"generate_choices(dataset)"},{"path":"/reference/generate_choices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function to generate either column or dataset choices for the corresponding UI dropdown menues — generate_choices","text":"dataset [data.frame | list(data.frame)] Single data.frame retrieve column labels list data.frames retrieve name labels. cases labels pasted column/dataset names returned order provide meaningful choices corresponding dropdown menues end-user.","code":""},{"path":"/reference/generate_choices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper function to generate either column or dataset choices for the corresponding UI dropdown menues — generate_choices","text":"Character vector type <name> [<label>]. Adds \"label\" placeholder missing labels.","code":""},{"path":"/reference/get_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function to gather either column or name labels of data.frames — get_labels","title":"Internal helper function to gather either column or name labels of data.frames — get_labels","text":"Internal helper function gather either column name labels data.frames","code":""},{"path":"/reference/get_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function to gather either column or name labels of data.frames — get_labels","text":"","code":"get_labels(dataset)"},{"path":"/reference/get_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function to gather either column or name labels of data.frames — get_labels","text":"dataset [data.frame | list(data.frame)] Single data.frame gather column labels list data.frames gather name labels.","code":""},{"path":"/reference/get_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper function to gather either column or name labels of data.frames — get_labels","text":"Character vector labels dataset. Named respective column data.frame names. Contains \"label\" missing labels.","code":""},{"path":"/reference/listings_UI.html","id":null,"dir":"Reference","previous_headings":"","what":"A module that displays datasets as listings — listings_UI","title":"A module that displays datasets as listings — listings_UI","text":"module displays given dataset listing. allows switching datasets receives one.","code":""},{"path":"/reference/listings_UI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A module that displays datasets as listings — listings_UI","text":"","code":"listings_UI(module_id)  listings_server(   module_id,   dataset_list,   default_vars = NULL,   dataset_metadata,   pagination = NULL,   intended_use_label = NULL,   subjid_var = \"USUBJID\",   on_sbj_click = NULL,   review = NULL )"},{"path":"/reference/listings_UI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A module that displays datasets as listings — listings_UI","text":"module_id Shiny id dataset_list [shiny::reactive(list(data.frame)] reactive list data.framish dataset(s) shown listing. default_vars [list(characters(1+)) | NULL] list character vectors contain variable names displayed default per dataset. Named according dataset_names. NULL, first six variables displayed dataset. dataset_metadata [list(character(1), character(1+))] list following two elements: dataset_metadata$name() containing reactive string specifying name selected dataset dataset_metadata$date_range() containing reactive character vector two entries specifying earliest latest modification date dataset. Usually obtained module manager. pagination [logical(1) | NULL] Either boolean indicating pagination activated, NULL pagination activated large datasets (nrows > 1000) automatically. intended_use_label [character(1) | NULL] Either string indicating intended use export, NULL. provided label displayed prior download also included exported file. subjid_var [character(1)] Column corresponding subject ID. Default value 'USUBJID' on_sbj_click [function()] Function invoke subject ID clicked listing review [list()] Configuration experimental data review feature. one instance listings module can use feature given app. details, please refer vignette(\"data_review\"). receiver_id [character(1) | NULL] Character string defining ID module send subject ID. module must exist module list. default NULL disables communication.","code":""},{"path":"/reference/listings_UI.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"A module that displays datasets as listings — listings_UI","text":"listings_server():","code":""},{"path":[]},{"path":"/reference/mock_listings_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Mock app without layout — mock_listings_app","title":"Mock app without layout — mock_listings_app","text":"mock_listings_app launches mock app dv.listings shiny module. development purposes.","code":""},{"path":"/reference/mock_listings_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mock app without layout — mock_listings_app","text":"","code":"mock_listings_app(mode = \"single\")"},{"path":"/reference/mock_listings_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mock app without layout — mock_listings_app","text":"mode Character value indicates whether include one multiple datasets. either \"single\" \"multi\".","code":""},{"path":[]},{"path":"/reference/mock_listings_mm.html","id":null,"dir":"Reference","previous_headings":"","what":"Mock app integrated in the module manager — mock_listings_mm","title":"Mock app integrated in the module manager — mock_listings_mm","text":"mock_listings_mm launches mock app dv.listings shiny module means module manager (dv.manager).","code":""},{"path":"/reference/mock_listings_mm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mock app integrated in the module manager — mock_listings_mm","text":"","code":"mock_listings_mm()"},{"path":[]},{"path":"/reference/mock_simple_listing_mm.html","id":null,"dir":"Reference","previous_headings":"","what":"Mock function for simple listing — mock_simple_listing_mm","title":"Mock function for simple listing — mock_simple_listing_mm","text":"Mock function simple listing","code":""},{"path":"/reference/mock_simple_listing_mm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mock function for simple listing — mock_simple_listing_mm","text":"","code":"mock_simple_listing_mm()"},{"path":"/reference/mod_export_listings_UI.html","id":null,"dir":"Reference","previous_headings":"","what":"Create user interface for the export listings shiny module of dv.listings — mod_export_listings_UI","title":"Create user interface for the export listings shiny module of dv.listings — mod_export_listings_UI","text":"Create user interface export listings shiny module dv.listings","code":""},{"path":"/reference/mod_export_listings_UI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create user interface for the export listings shiny module of dv.listings — mod_export_listings_UI","text":"","code":"mod_export_listings_UI(module_id)"},{"path":"/reference/mod_export_listings_UI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create user interface for the export listings shiny module of dv.listings — mod_export_listings_UI","text":"module_id [character(1)] unique ID string create namespace. Must match ID mod_exp_listings_server().","code":""},{"path":"/reference/mod_export_listings_UI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create user interface for the export listings shiny module of dv.listings — mod_export_listings_UI","text":"shiny uiOutput element.","code":""},{"path":"/reference/mod_export_listings_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Create server for export listings shiny module of dv.listings — mod_export_listings_server","title":"Create server for export listings shiny module of dv.listings — mod_export_listings_server","text":"Create server export listings shiny module dv.listings","code":""},{"path":"/reference/mod_export_listings_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create server for export listings shiny module of dv.listings — mod_export_listings_server","text":"","code":"mod_export_listings_server(   module_id,   dataset_metadata,   dataset_list,   data,   data_selection_name,   current_rows,   intended_use_label )"},{"path":"/reference/mod_export_listings_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create server for export listings shiny module of dv.listings — mod_export_listings_server","text":"module_id [character(1)] unique ID string create namespace. Must match ID mod_exp_listings_UI(). dataset_metadata [list(character(1), character(1+))] list following two elements: dataset_metadata$name() containing reactive string specifying name selected dataset dataset_metadata$date_range() containing reactive character vector two entries specifying earliest latest modification date dataset. Usually obtained module manager. dataset_list [shiny::reactive(list(data.frame))] reactive list named datasets. Usually obtained module manager. data [shiny::reactive(list(data.frame, character(0+)))] reactive list following two elements: data()$data containing single data frame data()$col_names containing column names data()$data. data_selection_name [shiny::reactive(character(1))] reactive string specifying name data()$data. current_rows [shiny::reactive(character(0+))] reactive integer vector containing selection row numbers data()$data. intended_use_label [character(1) | NULL] Either character indicating intended use download, NULL. label provided shown download also included downloaded file.","code":""},{"path":"/reference/mod_listings.html","id":null,"dir":"Reference","previous_headings":"","what":"Data listings module for DaVinci's module manager — mod_listings","title":"Data listings module for DaVinci's module manager — mod_listings","text":"module present dataset listing using DT package.","code":""},{"path":"/reference/mod_listings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data listings module for DaVinci's module manager — mod_listings","text":"","code":"mod_listings(   module_id,   dataset_names,   default_vars = NULL,   pagination = NULL,   intended_use_label =     \"Use only for internal review and monitoring during the conduct of clinical trials.\",   subjid_var = \"USUBJID\",   receiver_id = NULL,   review = NULL )"},{"path":"/reference/mod_listings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data listings module for DaVinci's module manager — mod_listings","text":"module_id [character(1)] Unique module_id identifier. can contain alphanumeric characters underscores. dataset_names [character(1+)] Name(s) dataset(s) displayed. default_vars [list(characters(1+)) | NULL] list character vectors contain variable names displayed default per dataset. Named according dataset_names. NULL, first six variables displayed dataset. pagination [logical(1) | NULL] Either boolean indicating pagination activated, NULL pagination activated large datasets (nrows > 1000) automatically. intended_use_label [character(1) | NULL] Either string indicating intended use export, NULL. provided label displayed prior download also included exported file. subjid_var [character(1)] Column corresponding subject ID. Default value 'USUBJID' receiver_id [character(1) | NULL] Character string defining ID module send subject ID. module must exist module list. default NULL disables communication. review [list()] Configuration experimental data review feature. one instance listings module can use feature given app. details, please refer vignette(\"data_review\").","code":""},{"path":[]},{"path":"/reference/mod_listings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data listings module for DaVinci's module manager — mod_listings","text":"","code":"if (FALSE) { # interactive() library(dv.listings)  # 1. Create a data list with example data data_list <- list(   adsl  = pharmaverseadam::adsl,   adae  = pharmaverseadam::adae,   adtte = pharmaverseadam::adtte_onco )  # 2. Preprocessing # Convert data to appropriate types data_list$adsl <- convert_data(data_list$adsl) data_list$adae <- convert_data(data_list$adae) data_list$adtte <- convert_data(data_list$adtte)  # Assign meaningful labels to data domain names attributes(data_list$adsl)$label <- \"Subject Level\" attributes(data_list$adae)$label <- \"Adverse Events\" attributes(data_list$adtte)$label <- \"Time-to-Event\"  # Specify default variables default_vars <- list(   adsl = c(\"STUDYID\", \"USUBJID\", \"SITEID\", \"ARM\"),   adae = c(\"STUDYID\", \"ASTDY\", \"AENDT\", \"AESER\") )  # 3. Module list module_list <- list(   \"Exemplary listings\" = mod_listings(     module_id = \"mod1\",     dataset_names = c(\"adsl\", \"adae\", \"adtte\"),     default_vars = default_vars   ) )  # 4. Launch the app dv.manager::run_app(   data = list(\"MyData\" = data_list),   module_list = module_list,   filter_data = \"adsl\" ) }"},{"path":"/reference/pack_of_constants.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a collection of named constants — pack_of_constants","title":"Build a collection of named constants — pack_of_constants","text":"Build collection named constants","code":""},{"path":"/reference/pack_of_constants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a collection of named constants — pack_of_constants","text":"","code":"pack_of_constants(...)"},{"path":"/reference/pack_of_constants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a collection of named constants — pack_of_constants","text":"... Named parameters collected constants","code":""},{"path":"/reference/pack_of_constants.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build a collection of named constants — pack_of_constants","text":"Shiny uses strings IDs link UI server elements. E.g: foo_UI(id = ns(\"foo\")) ... foo_server(id = \"foo\") pattern makes easy programmers fall trap modifying one instance string literal \"foo\" without modifying rest unaware problem bug hit. also easy mistakes uses \"foo\" identifier uses (text labels, ...) , often case, parameter explicitly named. One easy fix consists using global variables instead plain string literals. case previous example, mean: ID_FOO <- \"foo\" foo_UI(ns(ID_FOO)) ... foo_server(ID_FOO) simple addition makes purpose ID_FOO clear also fails gracefully ID_FOO instances updated synchronously along codebase. drawback polluting global namespace identifier variables. easily solved creating container constants, purpose pack_of_constants alias. ID <- pack_of_constants(FOO = \"foo\", BAR = \"bar\") ID$FOO \"foo\" ID$BA Error $.pack_of_constants(ID, BA) : Pack constants \"ID\" contain \"BA\" pack constants plain named list enforces elements unique, non-null names. tagged S3 object override extraction operators. use checkmate unnecessary, Good Library(TM) module rely anyways","code":""},{"path":"/reference/pdf_export.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function which performs the download as .pdf file. — pdf_export","title":"Internal helper function which performs the download as .pdf file. — pdf_export","text":"export dataset listed within data_to_download PDF file.","code":""},{"path":"/reference/pdf_export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function which performs the download as .pdf file. — pdf_export","text":"","code":"pdf_export(   data_to_download,   ref_cols,   file,   metadata,   active_session = TRUE,   intended_use_label )"},{"path":"/reference/pdf_export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function which performs the download as .pdf file. — pdf_export","text":"data_to_download [list(data.frame)] named list containing one data frame downloaded. #' @param ref [character(0+)] character vector whose entries specify selection columns dataset download. format entries follows: name [label]. file [character(1)] string specifying filename ending \".pdf\". metadata [character(3)] character vector specifying dataset's name, date, additional footnote text. active_session [logical(1)] Logical value indicates helper function used within shiny session. yes, parts displaying progress bar get activated. Defaults TRUE.","code":""},{"path":"/reference/pdf_export.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper function which performs the download as .pdf file. — pdf_export","text":"Number PDF pages generated.","code":""},{"path":"/reference/pdf_preprocessing.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function to divide a data frame into smaller data frames that fit on one PDF page each — pdf_preprocessing","title":"Internal helper function to divide a data frame into smaller data frames that fit on one PDF page each — pdf_preprocessing","text":"Needed preprocessing step PDF creation means RMarkdown can take place.","code":""},{"path":"/reference/pdf_preprocessing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function to divide a data frame into smaller data frames that fit on one PDF page each — pdf_preprocessing","text":"","code":"pdf_preprocessing(df, ref)"},{"path":"/reference/pdf_preprocessing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function to divide a data frame into smaller data frames that fit on one PDF page each — pdf_preprocessing","text":"df [data.frame] single data frame named columns. ref [character(0+)] character vector whose entries specify selection columns df. format entries follows: name [label].","code":""},{"path":"/reference/pdf_preprocessing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper function to divide a data frame into smaller data frames that fit on one PDF page each — pdf_preprocessing","text":"Named list containing list data frames (list_of_df) whose entries fit one PDF page .","code":""},{"path":"/reference/prep_export_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function for preparing the dataset(s) to download. — prep_export_data","title":"Internal helper function for preparing the dataset(s) to download. — prep_export_data","text":"Internal helper function preparing dataset(s) download.","code":""},{"path":"/reference/prep_export_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function for preparing the dataset(s) to download. — prep_export_data","text":"","code":"prep_export_data(   data_selection,   current_data,   data_selection_name,   dataset_list )"},{"path":"/reference/prep_export_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function for preparing the dataset(s) to download. — prep_export_data","text":"data_selection [character(1)] Either \"single\" \"\" depending whether currently displayed dataset (current_data) datasets (dataset_list) downloaded. current_data [data.frame] single data frame named columns. data_selection_name [character(1)] string specifying name current_data. dataset_list [list(data.frame)] list named datasets.","code":""},{"path":"/reference/prep_export_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper function for preparing the dataset(s) to download. — prep_export_data","text":"Named list containing data frames now ready download.","code":""},{"path":"/reference/set_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare data as it should be displayed in the module — set_data","title":"Prepare data as it should be displayed in the module — set_data","text":"Reduces dataset columns specified selector produces descriptive column names adding labels variable names.","code":""},{"path":"/reference/set_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare data as it should be displayed in the module — set_data","text":"","code":"set_data(base_data, selector)"},{"path":"/reference/set_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare data as it should be displayed in the module — set_data","text":"base_data [data.frame] Single data.frame. selector [character(0+)] Character vector selection column names base_data.","code":""},{"path":"/reference/set_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare data as it should be displayed in the module — set_data","text":"list tree elements: data data.frame prepared displayed -. col_names vector column names created combining variable names labels. row_names character vector containing number corresponding row.","code":""},{"path":"/reference/set_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function to set labels for all dataset columns — set_labels","title":"Internal helper function to set labels for all dataset columns — set_labels","text":"Internal helper function set labels dataset columns","code":""},{"path":"/reference/set_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function to set labels for all dataset columns — set_labels","text":"","code":"set_labels(dataset, labels)"},{"path":"/reference/set_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function to set labels for all dataset columns — set_labels","text":"dataset [data.frame] Single data.frame labels Character vector labels named respective column names dataset.","code":""},{"path":"/reference/set_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper function to set labels for all dataset columns — set_labels","text":"data.frame column labels","code":""},{"path":"/reference/set_up_datatable.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function to set up colnames, rownames, and paging arguments for DT's datatable. Main purpose is to easily test returned arguments. — set_up_datatable","title":"Internal helper function to set up colnames, rownames, and paging arguments for DT's datatable. Main purpose is to easily test returned arguments. — set_up_datatable","text":"Internal helper function set colnames, rownames, paging arguments DT's datatable. Main purpose easily test returned arguments.","code":""},{"path":"/reference/set_up_datatable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function to set up colnames, rownames, and paging arguments for DT's datatable. Main purpose is to easily test returned arguments. — set_up_datatable","text":"","code":"set_up_datatable(dataset, pagination)"},{"path":"/reference/set_up_datatable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function to set up colnames, rownames, and paging arguments for DT's datatable. Main purpose is to easily test returned arguments. — set_up_datatable","text":"dataset [data.frame] Single data.frame pagination [logical(1) | NULL] Either boolean indicating pagination activated, NULL pagination activated large datasets (nrows > 1000) automatically. selected_cols [character(0+)] Character vector selection column names dataset","code":""},{"path":"/reference/set_up_datatable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper function to set up colnames, rownames, and paging arguments for DT's datatable. Main purpose is to easily test returned arguments. — set_up_datatable","text":"List containing character vectors column names row names logical value de-/activating paging","code":""},{"path":"/reference/shorten_entries.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function to cut strings that exceed a specific length — shorten_entries","title":"Internal helper function to cut strings that exceed a specific length — shorten_entries","text":"Shortens strings long denotes cutting pasting \"...\" end string.","code":""},{"path":"/reference/shorten_entries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function to cut strings that exceed a specific length — shorten_entries","text":"","code":"shorten_entries(vec, len_max)"},{"path":"/reference/shorten_entries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function to cut strings that exceed a specific length — shorten_entries","text":"vec [character(0+)] character vector containing strings cut exceeding maximal length. len_max [integer(1)] integer specifying maximal length, must equal greater 3.","code":""},{"path":"/reference/shorten_entries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper function to cut strings that exceed a specific length — shorten_entries","text":"character vector containing shortened strings case exceeded maximal length.","code":""},{"path":"/reference/simple_listing.html","id":null,"dir":"Reference","previous_headings":"","what":"A module that displays a single dataset in a table form — simple_listing","title":"A module that displays a single dataset in a table form — simple_listing","text":"module shows given dataset table form.","code":""},{"path":"/reference/simple_listing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A module that displays a single dataset in a table form — simple_listing","text":"","code":"simple_listing_UI(module_id)  simple_listing_server(module_id, dataset)  mod_simple_listing(dataset_name, module_id)"},{"path":"/reference/simple_listing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A module that displays a single dataset in a table form — simple_listing","text":"module_id [character(1)] Unique module_id identifier. can contain alphanumeric characters underscores. dataset data.framish dataset shown table dataset_name [character(1)]","code":""},{"path":"/reference/simple_listing.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"A module that displays a single dataset in a table form — simple_listing","text":"simple_listing_UI(): UI simple_listing_server(): server mod_simple_listing(): module","code":""},{"path":"/reference/split_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function to prepare a data frame and determine the width of its columns for pdf export — split_label","title":"Internal helper function to prepare a data frame and determine the width of its columns for pdf export — split_label","text":"Shortens splits column label necessary, fits label_width rows column.","code":""},{"path":"/reference/split_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function to prepare a data frame and determine the width of its columns for pdf export — split_label","text":"","code":"split_label(label, min_width, max_width, label_width)"},{"path":"/reference/split_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function to prepare a data frame and determine the width of its columns for pdf export — split_label","text":"label [character(1)] string representing label. min_width [integer(1)] integer specifying minimal width column (less 1). max_width [integer(1)] integer specifying maximal width column (greater 3 also less min_width [integer(1)]). label_width [integer(1)] integer specifying maximal number rows allocated label (less 1).","code":""},{"path":"/reference/split_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper function to prepare a data frame and determine the width of its columns for pdf export — split_label","text":"list containing label_vec includes splitted label actual width col_width.","code":""},{"path":"/reference/warn_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function for warnings in case of missing/wrong selections done by the user. — warn_function","title":"Internal helper function for warnings in case of missing/wrong selections done by the user. — warn_function","text":"Triggers warning feedback particular condition true hides feedback false using shinyFeedback.","code":""},{"path":"/reference/warn_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function for warnings in case of missing/wrong selections done by the user. — warn_function","text":"","code":"warn_function(cond, input_id, text)"},{"path":"/reference/warn_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function for warnings in case of missing/wrong selections done by the user. — warn_function","text":"cond [logical(1)] Logical value indicates whether warning triggered (TRUE) (FALSE). input_id [character(1)] ID string indicating input field warning appear. text [character(1)] string containing warning message displayed.","code":""},{"path":"/news/index.html","id":"dvlistings-430","dir":"Changelog","previous_headings":"","what":"dv.listings 4.3.0","title":"dv.listings 4.3.0","text":"Display title current table Bulk editing interface Highlighting modified columns outdated reviews Tolerate previously known data rows go missing reappearing across dataset updates","code":""},{"path":"/news/index.html","id":"dvlistings-420","dir":"Changelog","previous_headings":"","what":"dv.listings 4.2.0","title":"dv.listings 4.2.0","text":"Includes experimental review functionality Adapt dataset selection accommodate switching dataset_list Adapt fill_default_vars keep specified default values datasets present Adapt checkmate calls allow default values datasets present Top buttons reordered single line avoid consuming excessive space","code":""},{"path":"/news/index.html","id":"dvlistings-410","dir":"Changelog","previous_headings":"","what":"dv.listings 4.1.0","title":"dv.listings 4.1.0","text":"Add jumping feature select columns unselect columns reset default columns reset filters Remove support data dispatchers Provide early feedback module misconfiguration","code":""},{"path":"/news/index.html","id":"dvlistings-400","dir":"Changelog","previous_headings":"","what":"dv.listings 4.0.0","title":"dv.listings 4.0.0","text":"Package renamed dv.listings.","code":""}]
